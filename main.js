(()=>{"use strict";function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var t=function(){function t(e,n,r,o){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),this._id=e.id,this._link=e.link,this._name=e.name,this._cardSelector=n,this._handleCardClick=r,this._handleDeleteButtonClick=o}var n,r;return n=t,(r=[{key:"_getTemplate",value:function(){return document.querySelector(this._cardSelector).content.querySelector(".elements__element").cloneNode(!0)}},{key:"_setEventListeners",value:function(){this._element.querySelector(".elements__like").addEventListener("click",this._toggleLike),this._element.querySelector(".elements__deleteButton").addEventListener("click",this._handleDeleteButtonClick),this._element.querySelector(".elements__image").addEventListener("click",this._handleCardClick)}},{key:"_toggleLike",value:function(e){e.target.classList.toggle("elements__like_active")}},{key:"getCard",value:function(){return this._element=this._getTemplate(),this._setEventListeners(),this._element.id=this._id,this._element.querySelector(".elements__name").textContent=this._name,this._element.querySelector(".elements__image").src=this._link,this._element.querySelector(".elements__image").alt=this._name,this._element}}])&&e(n.prototype,r),Object.defineProperty(n,"prototype",{writable:!1}),t}();function n(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var r=function(){function e(t,n){var r=t.items,o=t.renderer;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._items=r,this._renderer=o,this._cardElements=document.querySelector(n)}var t,r;return t=e,(r=[{key:"renderAll",value:function(){var e=this;this._items.forEach((function(t){e._renderer(t)}))}},{key:"addItem",value:function(e){this._cardElements.append(e)}}])&&n(t.prototype,r),Object.defineProperty(t,"prototype",{writable:!1}),e}();function o(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var i=function(){function e(t){var n=this;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._popup=document.querySelector(".popup"),this._form=document.querySelector(t),this._handleEscClose=function(e){"Escape"===e.key&&n.close()}}var t,n;return t=e,(n=[{key:"open",value:function(){this._popup.classList.remove("hidden"),this._popup.classList.add("visible"),this._form.classList.remove("hidden"),this._form.classList.add("visible"),document.addEventListener("keydown",this._handleEscClose)}},{key:"close",value:function(){this._popup.classList.add("hidden"),this._popup.classList.remove("visible"),this._form.classList.add("hidden"),this._form.classList.remove("visible"),document.removeEventListener("keydown",this._handleEscClose)}},{key:"setEventListeners",value:function(){var e=this;document.addEventListener("click",(function(t){t.target.classList.contains("popup")&&e.close()})),this._form.addEventListener("click",(function(t){t.target.classList.contains("exitButton")&&e.close()}))}}])&&o(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}();function c(e){return c="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},c(e)}function a(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function u(){return u="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(e,t,n){var r=l(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(arguments.length<3?e:n):o.value}},u.apply(this,arguments)}function l(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=p(e)););return e}function s(e,t){return s=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e},s(e,t)}function f(e,t){if(t&&("object"===c(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}function p(e){return p=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)},p(e)}var d=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&s(e,t)}(c,e);var t,n,r,o,i=(r=c,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=p(r);if(o){var n=p(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return f(this,e)});function c(e){var t;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,c),(t=i.call(this,e))._bigCardImage=document.querySelector(".popup__image"),t._bigCardCaption=document.querySelector(".popup__caption"),t}return t=c,(n=[{key:"open",value:function(e,t){this._bigCardImage.src=e,this._bigCardCaption.textContent=t,u(p(c.prototype),"open",this).call(this)}}])&&a(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),c}(i);function y(e){return y="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},y(e)}function h(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function _(){return _="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(e,t,n){var r=m(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(arguments.length<3?e:n):o.value}},_.apply(this,arguments)}function m(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=g(e)););return e}function v(e,t){return v=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e},v(e,t)}function b(e,t){if(t&&("object"===y(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}function g(e){return g=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)},g(e)}var w=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&v(e,t)}(c,e);var t,n,r,o,i=(r=c,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=g(r);if(o){var n=g(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return b(this,e)});function c(e,t){var n;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,c),(n=i.call(this,e))._submitHandler=t,n}return t=c,(n=[{key:"_getInputValues",value:function(){var e=this,t=this._form.querySelectorAll(".popup__input");this._formValues={},t.forEach((function(t){e._formValues[t.name]=t.value}))}},{key:"setEventListeners",value:function(){_(g(c.prototype),"setEventListeners",this).call(this),this._form.addEventListener("submit",this._submitHandler)}},{key:"close",value:function(){_(g(c.prototype),"close",this).call(this),this._form.reset()}}])&&h(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),c}(i);function C(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var S=function(){function e(t){var n=t.userNameSelector,r=t.occupationSelector;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._profileName=document.querySelector(n),this._profileOccupation=document.querySelector(r)}var t,n;return t=e,(n=[{key:"getUserInfo",value:function(){return{name:this._profileName.textContent,occupation:this._profileOccupation.textContent}}},{key:"setUserInfo",value:function(e){var t=e.name,n=e.occupation;this._profileName.textContent=t,this._profileOccupation.textContent=n}}])&&C(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}();function O(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var k=function(){function e(t,n){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._inputList=Array.from(n.querySelectorAll(t.inputSelector)),this._submitButtonSelector=t.submitButtonSelector,this._inactiveButtonClass=t.inactiveButtonClass,this._inputErrorClass=t.inputErrorClass,this._errorClass=t.errorClass}var t,n;return t=e,(n=[{key:"enableValidation",value:function(){var e=this;this._inputList.forEach((function(t){t.addEventListener("input",(function(t){e._handleValidity(t)}))}))}},{key:"_handleValidity",value:function(e){var t=e.target;t.validity.valid?this._hideError(t):this._showError(t),this._checkSubmitterAvailability()}},{key:"_checkSubmitterAvailability",value:function(){var e=this._inputList[0].form.querySelector(this._submitButtonSelector);this._inputList.every((function(e){return e.validity.valid}))?(e.classList.remove(this._inactiveButtonClass),e.disabled=!1):(e.classList.add(this._inactiveButtonClass),e.disabled=!0)}},{key:"_showError",value:function(e){e.classList.add(this._inputErrorClass);var t=e.form.querySelector("."+this._errorClass+e.id);t.classList.remove("hidden"),t.textContent=e.validationMessage}},{key:"_hideError",value:function(e){e.classList.remove(this._inputErrorClass),e.form.querySelector("."+this._errorClass+e.id).classList.add("hidden")}}])&&O(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}();function E(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var j=function(){function e(t){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._server=t}var t,n;return t=e,(n=[{key:"getCards",value:function(){return fetch(this._server,{method:"GET"}).then((function(e){return e.json()}))}},{key:"addCard",value:function(e){return fetch(this._server,{method:"POST",headers:{"Content-Type":"application/x-www-form-urlencoded"},body:e}).then((function(e){return e.json()}))}},{key:"deleteCard",value:function(e){return fetch(this._server+"/"+e,{method:"DELETE",headers:{"Content-Type":"application/x-www-form-urlencoded"}}).then((function(e){return e.json()}))}}])&&E(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}(),L=document.querySelector(".type_new-item .popup__input_type_line-one"),P=document.querySelector(".type_new-item .popup__input_type_line-two"),q=document.querySelector(".elements"),B=document.querySelector(".type_profile .popup__input_type_line-one"),R=document.querySelector(".type_profile .popup__input_type_line-two"),T=document.querySelector(".profile__editButton"),x=document.querySelector(".profile__addButton"),I={formSelector:".popup__container",inputSelector:".popup__input",submitButtonSelector:".popup__saveButton",inactiveButtonClass:"popup__saveButton_error",inputErrorClass:"popup__input_style-error",errorClass:"popup__input-error_place_line"},A=void 0,D=new j("http://127.0.0.1:3002/cards"),V=new d(".popup__big-card");V.setEventListeners();var N=new w(".type_profile",(function(e){e.preventDefault(),N._getInputValues(),H.setUserInfo(N._formValues),N.close()}));N.setEventListeners(),T.addEventListener("click",(function(){var e=H.getUserInfo();B.value=e.name,R.value=e.occupation,N.open()}));var U=new w(".type_new-item",(function(e){e.preventDefault();var n=L.value,r=P.value;D.addCard("name="+encodeURIComponent(n)+"&link="+encodeURIComponent(r)).then((function(e){var o={id:Number(e),name:n,link:r},i=new t(o,"#card-template",(function(e){return V.open(e.target.src,e.target.alt)}),(function(e){var t=e.target.closest(".elements__element");D.deleteCard(t.id).then((function(e){return t.remove()})).catch((function(e){return console.log(e.message)}))})),c=i.getCard();A.addItem(c),U.close()})).catch((function(e){console.log(e.message)}))}));U.setEventListeners(),x.addEventListener("click",(function(){U.open()}));var H=new S({userNameSelector:".profile__name",occupationSelector:".profile__occupation"});H.setUserInfo({name:"Жак-Ив Кусто",occupation:"Исследователь океана"});var G=I.formSelector,M=function(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}(I,["formSelector"]);Array.from(document.querySelectorAll(G)).forEach((function(e){new k(M,e).enableValidation()})),function(){for(;q.firstChild;)q.removeChild(q.firstChild);D.getCards().then((function(e){var n={items:e,renderer:function(e){var n=new t(e,"#card-template",(function(e){return V.open(e.target.src,e.target.alt)}),(function(e){var t=e.target.closest(".elements__element");D.deleteCard(t.id).then((function(e){return t.remove()})).catch((function(e){return console.log(e.message)}))})).getCard();A.addItem(n)}};(A=new r(n,".elements")).renderAll()})).catch((function(e){V.open("https://xn--443-5cd3cgu2f.xn--p1ai/wp-content/uploads/error.jpg",e.message)}))}()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,